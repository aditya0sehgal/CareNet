[{"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Navbar.js":"1","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\homepage\\Data.js":"2","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Register\\Signup.js":"3","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Register\\Login.js":"4","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\reportWebVitals.js":"5","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\HGraph\\HGraph.js":"6","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Register\\Register.js":"7","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\App.js":"8","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\index.js":"9","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Diabetes\\DiabetesForm.js":"10","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Pneumonia\\Pneumonia.js":"11","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\Dashboard.js":"12","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\Diagnostic.js":"13","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\homepage\\Home.js":"14","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\homepage\\PersonalHome.js":"15"},{"size":3031,"mtime":1613241238089,"results":"16","hashOfConfig":"17"},{"size":1880,"mtime":1612256809430,"results":"18","hashOfConfig":"17"},{"size":3089,"mtime":1612292611554,"results":"19","hashOfConfig":"17"},{"size":2337,"mtime":1612291422129,"results":"20","hashOfConfig":"17"},{"size":375,"mtime":1612256809443,"results":"21","hashOfConfig":"17"},{"size":12735,"mtime":1612256809078,"results":"22","hashOfConfig":"17"},{"size":1348,"mtime":1612292030181,"results":"23","hashOfConfig":"17"},{"size":1320,"mtime":1613222000475,"results":"24","hashOfConfig":"17"},{"size":565,"mtime":1612256809441,"results":"25","hashOfConfig":"17"},{"size":3880,"mtime":1612256808529,"results":"26","hashOfConfig":"17"},{"size":2265,"mtime":1612256809366,"results":"27","hashOfConfig":"17"},{"size":1713,"mtime":1612256808485,"results":"28","hashOfConfig":"17"},{"size":2498,"mtime":1613376645873,"results":"29","hashOfConfig":"17"},{"size":1093,"mtime":1613245532642,"results":"30","hashOfConfig":"17"},{"size":419,"mtime":1613245725006,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"11llxa5",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Navbar.js",["67","68"],"import React,{useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { Button  } from 'reactstrap';\r\nimport {MdFingerprint} from 'react-icons/md';\r\nimport {FaBars,FaTimes} from 'react-icons/fa';\r\nimport {IconContext} from 'react-icons';\r\nimport './navbar.css'\r\n\r\nfunction Navbar() {\r\n    const [click,setClick]=useState(false);\r\n    const [button,setButton]=useState(true)\r\n    const handleclick =() =>setClick(!click);\r\n    const closedMenu=() =>setClick(false)\r\n    const showButton=()=>{\r\n        if(window.innerWidth<=960){\r\n            setButton(false);\r\n        }\r\n            else{\r\n            setButton(true)\r\n        }\r\n        };\r\n    window.addEventListener('resize',showButton);\r\n\r\n    const [user, setUserSession] = useState({user: ''})\r\n\r\n    useEffect(()=> {\r\n      fetch('/sessioninfo')\r\n      .then(response => response.json()\r\n      ).then(data => {\r\n            console.log(data);\r\n            console.log(user);\r\n\r\n            if(data['username']){\r\n                setUserSession({user : data['username']})\r\n            }\r\n            return ;\r\n    })\r\n    },[]);\r\n\r\n    return (\r\n        <>\r\n        <IconContext.Provider value={{color:'#fff'}}>\r\n      <div className='navbar'>\r\n          <div className='navbar-container container'>\r\n              <Link to='/' onClick={closedMenu}>\r\n                <h2 style={{textDecoration: 'none', color: 'white'}}>\r\n                <MdFingerprint className='navbar-icon'/>\r\n                  CareNet\r\n                </h2> \r\n              </Link>\r\n              <div className='menu-icon' onClick={handleclick}>\r\n                {click ?<FaTimes/> :<FaBars/>}\r\n              </div>\r\n              <ul className={click ? 'nav-menu active' : 'nav-menu'}\r\n>\r\n   <li className='nav-item'>\r\n       <Link to='/' className='nav-links'>\r\n           Home\r\n       </Link>\r\n       </li>\r\n       <li className='nav-item'>\r\n       <Link to='/Diagnostics' className='nav-links'>\r\n           Diagnostics\r\n       </Link>\r\n       </li> \r\n       \r\n       <li className='nav-btn'>\r\n           {/* {button ?(\r\n               <Link to='/signup' className='btn-link'>\r\n                   <Button>SIGN UP</Button>\r\n               </Link>\r\n           ):( */}\r\n           {user.user === ''  ? \r\n           \r\n            <Link to='/signup' className='btn-link'>\r\n                <Button>SIGN UP</Button>\r\n            </Link>\r\n           :\r\n            <Link style={{textDecoration: 'none'}} className='btn-link'>\r\n                Welcome {user.user.toUpperCase()} &nbsp;\r\n                <Button onClick={() => fetch('/logout')\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data); \r\n                    window.location.replace('/')\r\n                    }\r\n                )}>Logout</Button>\r\n            </Link>\r\n            \r\n           }\r\n           \r\n       </li>\r\n    </ul>          \r\n    </div>\r\n      </div>\r\n      </IconContext.Provider>\r\n</>        \r\n    )\r\n}\r\n\r\nexport default Navbar\r\n",["69","70"],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\homepage\\Data.js",[],["71","72"],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Register\\Signup.js",[],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Register\\Login.js",[],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\reportWebVitals.js",[],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\HGraph\\HGraph.js",["73"],"import React from 'react';\r\nimport HGraph, {\r\n  hGraphConvert,\r\n  calculateHealthScore\r\n} from '../../../../node_modules/hgraph-react'; // symlinked with 'yarn link' from project root.\r\n\r\nimport data2017 from \"../../data.json\";\r\nimport '../../HGraph.css';\r\nimport { Button, UncontrolledPopover, PopoverHeader, PopoverBody, Table  } from 'reactstrap';\r\n\r\nclass Hgraph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const converted2017 = this.convertDataSet(data2017);\r\n    console.log(data2017);\r\n    console.log(converted2017);\r\n    const yearData = [\r\n      {\r\n        label: '2017',\r\n        data: converted2017,\r\n        score: parseInt(calculateHealthScore(converted2017), 10)\r\n      },\r\n    ];\r\n\r\n    this.state = {\r\n      windowWidth: window.innerWidth,\r\n      yearData: [],\r\n      data: [],\r\n      historyOpen: false,\r\n      historyData: [],\r\n      formsubmit: false\r\n    }\r\n\r\n    console.log(this.state.data);\r\n    this.card = React.createRef();\r\n  }\r\n\r\n  convertDataSet = (data) => {\r\n    return data.map(d => {\r\n      const converted = hGraphConvert('male', d.metric, d);\r\n      converted.id = d.metric;\r\n      if (d.children) {\r\n        converted.children = d.children.map(c => {\r\n          const convertedChild = hGraphConvert('male', c.metric, c);\r\n          convertedChild.parentKey = c.parentKey;\r\n          convertedChild.id = c.metric;\r\n          console.log(convertedChild);\r\n          return convertedChild;\r\n        })\r\n      }\r\n      converted.value = d.value;\r\n      // console.log(converted);\r\n      return converted;\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n    document.addEventListener('mousedown', this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n    document.removeEventListener('mousedown', this.handleClick);\r\n  }\r\n\r\n  updateWindowDimensions = () => {\r\n    this.setState({ windowWidth: window.innerWidth });\r\n  }\r\n\r\n  setYearData = (index) => (e) => {\r\n    this.setState({\r\n      data: this.state.yearData[index]\r\n    })\r\n  }\r\n\r\n  handlePointClick = (data, event) => {\r\n    this.setState({\r\n      historyOpen: true,\r\n      historyData: data,\r\n    })\r\n  }\r\n\r\n  handleClick = (e) => {\r\n    if (this.state.historyOpen && this.card.current && !this.card.current.contains(e.target)) {\r\n      this.setState({ historyOpen: false })\r\n    }\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const data = new FormData(event.target);\r\n    const value = Object.fromEntries(data.entries());\r\n    console.log( JSON.stringify(value) );  // View entered values from the form.\r\n    console.log( value );  // View entered values from the form.\r\n\r\n    // To generate a json file having data from the form to use on the HGraph component.\r\n    let healthdataarray = []\r\n    for (var key in value) {\r\n    if (value.hasOwnProperty(key)) {\r\n      var val = value[key];\r\n\r\n      let current_obj = {\r\n        \"metric\": key,\r\n        \"value\": val,\r\n      }\r\n      healthdataarray.push(current_obj)\r\n      // console.log(current_obj ,key, val);\r\n    }\r\n  }\r\n    healthdataarray.push({\r\n      \"metric\": \"painLevel\",\r\n      \"value\": \"2\"})\r\n    healthdataarray.push({\r\n      \"metric\": \"happiness\",\r\n      \"value\": \"8\"})\r\n    healthdataarray.push({\r\n      \"metric\": \"other\",\r\n      \"value\" : \"0.5\"})\r\n    console.log(healthdataarray);  // replacement for data.json\r\n      \r\n    // Checking if our data from the form is converted to the correct data object.\r\n    \r\n    const convertedata = this.convertDataSet(healthdataarray);\r\n    console.log(healthdataarray);\r\n    console.log(convertedata); \r\n\r\n    const yearData = [\r\n      {\r\n        label: '2017',\r\n        data: convertedata,\r\n        score: parseInt(calculateHealthScore(convertedata), 10)\r\n      },\r\n    ];\r\n\r\n    // Change the form submitted value to true to display the HGraph.\r\n    // Setting other state values.\r\n    this.setState({\r\n      yearData: yearData,\r\n      data: yearData[0],\r\n      historyData: yearData[0].data[0],\r\n      formsubmit: true\r\n    })\r\n    // this.state = {\r\n    //   yearData: yearData,\r\n    //   data: yearData[0],\r\n    //   historyData: yearData[0].data[0],\r\n    //   formsubmit: true\r\n    // }\r\n\r\n    // this.setState({formsubmit: true}) \r\n    console.log(this.state);\r\n\r\n    // Send the health graph form data to the server.\r\n    fetch('healthscore', {\r\n      method: 'POST', // or 'PUT'\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(value),\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      console.log('Success:', data);\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error:', error);\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    const sizeBasedOnWindow = this.state.windowWidth / 2;\r\n    const size = sizeBasedOnWindow > 450 ? 450 : sizeBasedOnWindow;\r\n    // const historySize = this.card.current ? this.card.current.clientWidth - 20 : 0;\r\n\r\n\r\n    return (\r\n      <div className=\"App\">\r\n      <div className=\"root-container\" style={{ height: this.state.formsubmit ? '270vh' :'150vh' , backgroundImage:\"url('healthgraph.jpg')\"}} >\r\n                       \r\n          <h1 style={{color:'white'}}>\r\n            Health Score \r\n          </h1>\r\n            \r\n          <UncontrolledPopover trigger=\"focus\" placement=\"right\" target=\"PopoverFocus\">\r\n            <PopoverHeader>Healthy range values for each parameter.</PopoverHeader>\r\n            <PopoverBody>\r\n              <Table bordered>\r\n                <thead>\r\n                  <tr>\r\n                    \r\n                    <th>Parameter</th>\r\n                    <th>Healthy Range</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    \r\n                    <td>Total Cholesterol</td>\r\n                    <td>0.25-0.75</td>\r\n                  </tr>\r\n                  <tr>\r\n                    \r\n                    <td>Glucose</td>\r\n                    <td>61-100</td>\r\n                  </tr>\r\n                  <tr>\r\n                    \r\n                    <td>Systolic Blood Pressure</td>\r\n                    <td>99-148</td>\r\n                  </tr>\r\n                  <tr>\r\n                 \r\n                    <td>Diastolic Blood Pressure</td>\r\n                    <td>65-95</td>\r\n                  </tr>\r\n                  <tr>\r\n                    \r\n                    <td>Alcohol Use</td>\r\n                    <td>0-1</td>\r\n                  </tr>\r\n                  <tr>\r\n                    \r\n                    <td>Nicotine Use</td>\r\n                    <td>0-1</td>\r\n                  </tr>\r\n                  <tr>\r\n                    \r\n                    <td>Waist Circumference</td>\r\n                    <td>30.0-34.5</td>\r\n                  </tr>\r\n                  <tr>\r\n                    \r\n                    <td>Exercise</td>\r\n                    <td>3-12</td>\r\n                  </tr>\r\n                  <tr>\r\n                    \r\n                    <td>Sleep</td>\r\n                    <td>7.1-8.0</td>\r\n                  </tr>\r\n                  <tr>\r\n                    \r\n                    <td>Weight</td>\r\n                    <td>170-205</td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </PopoverBody>\r\n          </UncontrolledPopover>\r\n          {/* <Button color=\"primary\">hello</Button> */}\r\n          <div className='box-container' >\r\n            {/* <form action='/healthscore' method='POST' onSubmit={this.handleClick}> */}\r\n            <form onSubmit={this.handleSubmit}>\r\n  \r\n                <div className='box'>\r\n                  <div className='input-group'>\r\n                      <label htmlFor='totalCholesterol'>\r\n                      Total Cholesterol\r\n                          </label>\r\n                      <input type='text' name='totalCholesterol' className='login-input' placeholder='Enter the value in mg/dl.'/>\r\n                  </div>\r\n                   \r\n                  <div className='input-group'>\r\n                    <label htmlFor='glucose'>\r\n                            Glucose\r\n                        </label>\r\n                    <input type='text' name='glucose' className='login-input' placeholder='Enter the value in mg/dl.'/>\r\n                  </div>\r\n\r\n                  <div className='input-group'>\r\n                    <label htmlFor='bloodPressureSystolic'>\r\n                        Systolic Blood Pressure\r\n                        </label>\r\n                    <input type='text' name='bloodPressureSystolic' className='login-input' placeholder='Enter the value in mm/Hg.'/>\r\n                  </div>\r\n                  \r\n                  <div className='input-group'>\r\n                    <label htmlFor='bloodPressureDiastolic'>\r\n                    Diastolic Blood Pressure\r\n                        </label>\r\n                    <input type='text' name='bloodPressureDiastolic' className='login-input' placeholder='Enter the value in mm/Hg.' />\r\n                  </div>\r\n                    \r\n                  <div className='input-group'>\r\n                    <label htmlFor='alcoholUse'>\r\n                    Alcohol Use\r\n                        </label>\r\n                    <input type='text' name='alcoholUse' className='login-input' placeholder='Enter the number of drinks/week.'/>\r\n                  </div>\r\n\r\n                  <div className='input-group'>\r\n                    <label htmlFor='nicotineUse'>\r\n                    Nicotine Use\r\n                        </label>\r\n                    <input type='text' name='nicotineUse' className='login-input' placeholder='Enter the number of nicotine/day.'/>\r\n                  </div>\r\n                  \r\n                  <div className='input-group'>\r\n                    <label htmlFor='waistCircumference'>\r\n                    Waist Circumference\r\n                        </label>\r\n                    <input type='text' name='waistCircumference' className='login-input' placeholder='Enter the value in inches.'/>\r\n                  </div>\r\n        \r\n                  <div className='input-group'>\r\n                    <label htmlFor='exercise'>\r\n                      Exercise\r\n                        </label>\r\n                    <input type='text' name='exercise' className='login-input' placeholder='Enter the value in hours/week.'/>\r\n                  </div>\r\n\r\n                  <div className='input-group'>\r\n                    <label htmlFor='sleep'>\r\n                      Sleep\r\n                        </label>\r\n                    <input type='text' name='sleep' className='login-input' placeholder='Enter the value in hours/night.'/>\r\n                  </div>\r\n\r\n                  <div className='input-group'>\r\n                    <label htmlFor='weight'>\r\n                      Weight\r\n                        </label>\r\n                    <input type='text' name='weight' className='login-input' placeholder='Enter the value in lbs.'/>\r\n                  </div>\r\n\r\n                  <button className='login-btn'>Get Health Score</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <h3>\r\n        <Button id=\"PopoverFocus\" color='primary' style={{borderRadius:'30px'}} type=\"button\">\r\n          Healthy Range Values\r\n        {/* <i style={{color:'whitesmoke'}} class=\"fa fa-info\"></i>  */}\r\n        </Button> \r\n        </h3> \r\n        {this.state.formsubmit === true && \r\n        <div>\r\n        <div className=\"card\" \r\n        style={{ top: this.state.historyOpen ? '80vh' : '120vh' }} \r\n        ref={this.card}>\r\n              <div>\r\n                  <p>{ this.state.historyData.label }</p>\r\n                  <p>{ this.state.historyData.value } { this.state.historyData.unitLabel }</p>\r\n              </div>\r\n        </div>\r\n\r\n        <div className=\"vis-container\" style={{ height: this.state.historyOpen ? '50vh' : '100vh' }}>\r\n          <HGraph\r\n            data={ this.state.data.data }\r\n            score={ this.state.data.score }\r\n            width={ size }\r\n            height={ size }\r\n            fontColor={'rgb(255, 255, 255)'}\r\n            scoreFontColor={'rgb(255, 255, 255)'}\r\n            fontSize={ size < 300 ? 16 : 19 }\r\n            pointRadius={ size < 300 ? 5 : 10 }\r\n            scoreFontSize={ size < 300 ? 50 : 120 }\r\n            // onPointClick={false}\r\n            // zoomOnPointClick={false}\r\n            onPointClick={this.handlePointClick}\r\n            zoomOnPointClick={true}\r\n          />\r\n        </div>\r\n        </div>\r\n        }\r\n        </div>\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Hgraph;\r\n\r\n\r\n","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Register\\Register.js",[],["74","75"],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\App.js",["76","77"],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\index.js",[],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Diabetes\\DiabetesForm.js",[],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Pneumonia\\Pneumonia.js",[],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\Dashboard.js",[],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\Diagnostic.js",["78","79"],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\homepage\\Home.js",["80","81","82","83"],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\homepage\\PersonalHome.js",[],{"ruleId":"84","severity":1,"message":"85","line":11,"column":12,"nodeType":"86","messageId":"87","endLine":11,"endColumn":18},{"ruleId":"88","severity":1,"message":"89","line":38,"column":7,"nodeType":"90","endLine":38,"endColumn":9,"suggestions":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"92","replacedBy":"96"},{"ruleId":"94","replacedBy":"97"},{"ruleId":"84","severity":1,"message":"98","line":18,"column":11,"nodeType":"86","messageId":"87","endLine":18,"endColumn":19},{"ruleId":"92","replacedBy":"99"},{"ruleId":"94","replacedBy":"100"},{"ruleId":"84","severity":1,"message":"101","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":12},{"ruleId":"84","severity":1,"message":"102","line":15,"column":10,"nodeType":"86","messageId":"87","endLine":15,"endColumn":21},{"ruleId":"84","severity":1,"message":"103","line":3,"column":45,"nodeType":"86","messageId":"87","endLine":3,"endColumn":48},{"ruleId":"84","severity":1,"message":"104","line":3,"column":50,"nodeType":"86","messageId":"87","endLine":3,"endColumn":53},{"ruleId":"84","severity":1,"message":"105","line":3,"column":9,"nodeType":"86","messageId":"87","endLine":3,"endColumn":13},{"ruleId":"84","severity":1,"message":"106","line":4,"column":10,"nodeType":"86","messageId":"87","endLine":4,"endColumn":16},{"ruleId":"84","severity":1,"message":"107","line":6,"column":34,"nodeType":"86","messageId":"87","endLine":6,"endColumn":46},{"ruleId":"88","severity":1,"message":"89","line":24,"column":7,"nodeType":"90","endLine":24,"endColumn":9,"suggestions":"108"},"no-unused-vars","'button' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["109"],"no-native-reassign",["110"],"no-negated-in-lhs",["111"],["110"],["111"],"'yearData' is assigned a value but never used.",["110"],["111"],"'logo' is defined but never used.","'initialData' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Link' is defined but never used.","'Button' is defined but never used.","'homeObjThree' is defined but never used.",["112"],{"desc":"113","fix":"114"},"no-global-assign","no-unsafe-negation",{"desc":"113","fix":"115"},"Update the dependencies array to be: [user]",{"range":"116","text":"117"},{"range":"118","text":"117"},[1109,1111],"[user]",[706,708]]