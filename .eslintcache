[{"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Register\\Register.js":"1","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\HGraph\\HGraph.js":"2","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Diagnostics\\Diagnostics.js":"3","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\homepage\\PersonalHome.js":"4","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Pneumonia\\Pneumonia.js":"5","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Diabetes\\DiabetesForm.js":"6","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\index.js":"7","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\homepage\\Home.js":"8","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\Diagnostic.js":"9","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Register\\Login.js":"10","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Register\\Signup.js":"11","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\homepage\\Data.js":"12","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\Dashboard.js":"13","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Navbar.js":"14"},{"size":1348,"mtime":1612292030181,"results":"15","hashOfConfig":"16"},{"size":21907,"mtime":1621965536059,"results":"17","hashOfConfig":"16"},{"size":224,"mtime":1621964074921,"results":"18","hashOfConfig":"16"},{"size":12802,"mtime":1618339232863,"results":"19","hashOfConfig":"16"},{"size":4596,"mtime":1621965759844,"results":"20","hashOfConfig":"16"},{"size":13345,"mtime":1621964722376,"results":"21","hashOfConfig":"16"},{"size":565,"mtime":1612256809441,"results":"22","hashOfConfig":"16"},{"size":1252,"mtime":1615748601343,"results":"23","hashOfConfig":"16"},{"size":2498,"mtime":1613376645873,"results":"24","hashOfConfig":"16"},{"size":2337,"mtime":1612291422129,"results":"25","hashOfConfig":"16"},{"size":3087,"mtime":1615918872944,"results":"26","hashOfConfig":"16"},{"size":1880,"mtime":1614599881715,"results":"27","hashOfConfig":"16"},{"size":1713,"mtime":1613732098387,"results":"28","hashOfConfig":"16"},{"size":3192,"mtime":1614606366992,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11llxa5",{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Register\\Register.js",[],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\HGraph\\HGraph.js",["59","60","61"],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Diagnostics\\Diagnostics.js",[],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\homepage\\PersonalHome.js",["62"],"import React, { Component } from 'react'\r\nimport { Line } from '@reactchartjs/react-chart.js';\r\n \r\nimport { Table  } from 'reactstrap';\r\n\r\nconst data = {\r\n    labels: ['1', '2', '3', '4', '5', '6'],\r\n    datasets: [\r\n      {\r\n        label: 'Your prediction history',\r\n        data: [12, 19, 3, 5, 2, 3],\r\n        fill: false,\r\n        backgroundColor: 'rgb(255, 99, 132)',\r\n        borderColor: 'rgba(255, 99, 132, 0.2)',\r\n      },\r\n    ],\r\n  }\r\n\r\nclass PersonalHome extends Component {\r\n    _isMounted = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            diabetes : {},\r\n            hgraph: {},\r\n            pneumonia: {},\r\n            dGData : {},\r\n            hGData: {},\r\n            pGData: {},\r\n            hlen: 0,\r\n            dlen: 0,\r\n            plen: 0,\r\n            dataishere : false\r\n        };\r\n\r\n      }\r\n    \r\n    componentDidMount(){\r\n        this._isMounted = true;\r\n        fetch(\"/userdata\", {\r\n            method:\"GET\",\r\n            cache: \"no-cache\",\r\n            }\r\n            ).then(response => {\r\n            return response.json()\r\n        })\r\n        .then(json => {\r\n            console.log(json)\r\n            this.setState({\r\n              diabetes: json['diabetesdata'],\r\n              dataishere : true, \r\n              hgraph: json['hgraphdata'],\r\n              hlen: json['hgraphdata'].length,\r\n              dlen: json['diabetesdata'].length,\r\n              plen: json['pneumoniadata'].length,\r\n              pneumonia: json['pneumoniadata'], \r\n            })\r\n            console.log(this.state.diabetes);\r\n            console.log(this.state.hgraph);\r\n            console.log(this.state.pneumonia); \r\n            \r\n            let p_y_values = []\r\n            let p_x_values = []\r\n            let d_y_values = []\r\n            let d_x_values = []\r\n            let h_y_values = []\r\n            let h_x_values = []\r\n            this.state.pneumonia.forEach(element => {\r\n                p_y_values.push(element.prediction === 'Normal'? 0:1)\r\n                let loopvar = element.date.split(\" \")\r\n                p_x_values.push([loopvar[0]+'\\n'+loopvar[1]])\r\n            });\r\n            this.state.hgraph.forEach(element => {\r\n                h_y_values.push(element.score)\r\n                let loopvar = element.date.split(\" \")\r\n                h_x_values.push([loopvar[0]+'\\n'+loopvar[1]])\r\n            });\r\n            this.state.diabetes.forEach(element => {\r\n                d_y_values.push(element.prediction)\r\n                let loopvar = element.date.split(\" \")\r\n                d_x_values.push([loopvar[0]+'\\n'+loopvar[1]])\r\n            });\r\n            console.log( p_x_values , p_y_values );\r\n            this.setState({\r\n              pGData: {\r\n                labels: p_x_values.length<5 ? p_x_values : p_x_values.slice(-5,),\r\n                datasets: [\r\n                  {\r\n                    label: 'Your prediction history data',\r\n                    data: p_y_values.length<5 ? p_y_values : p_y_values.slice(-5,),\r\n                    fill: false,\r\n                    backgroundColor: 'rgb( 0,0,255 )',\r\n                    borderColor: 'rgba( 0,0,255 , 0.5)',\r\n                  },\r\n                ],\r\n              },\r\n              hGData: {\r\n                labels: h_x_values.length<5 ? h_x_values : h_x_values.slice(-5,),\r\n                datasets: [\r\n                  {\r\n                    label: 'Your prediction history data',\r\n                    data: h_y_values.length<5 ? h_y_values : h_y_values.slice(-5,),\r\n                    fill: false,\r\n                    backgroundColor: 'rgb( 0,0,255 )',\r\n                    borderColor: 'rgba( 0,0,255 , 0.5)',\r\n                  },\r\n                ],\r\n              },\r\n              dGData: {\r\n                labels: d_x_values.length<5 ? d_x_values : d_x_values.slice(-5,),\r\n                datasets: [\r\n                  {\r\n                    label: 'Your prediction history data',\r\n                    data: d_y_values.length<5 ? d_y_values : d_y_values.slice(-5,),\r\n                    fill: false,\r\n                    backgroundColor: 'rgb( 0,0,255 )',\r\n                    borderColor: 'rgba( 0,0,255 , 0.5)',\r\n                  },\r\n                ],\r\n              }\r\n            })\r\n            console.log(this.state);\r\n          })\r\n      }\r\n\r\n      render() {\r\n        if(this.state.dataishere  === true){\r\n          return (\r\n              <div style={{width:'100vw', maxWidth:'100vw'}}>\r\n                { this.state.hlen > 0 ? \r\n                <> \r\n                  <br></br>\r\n                  <h2 className='pt-3 pb-3'>H-Graph Data</h2>                  \r\n                  <div style={{maxHeight:'50vh', display:'flex', height:'50vh'}}>\r\n                    <div style={{maxWidth:'48vw',display:'flex', width:'48vw'}}>\r\n                      <Line \r\n                          data={this.state.hGData} \r\n                          options={{ maintainAspectRatio: false }}\r\n                          width={50}\r\n                          height={50}\r\n                          style={{ float:'left'}} \r\n                      />\r\n                    </div>\r\n                    { this.state.hlen >= 5 ? \r\n                    <Table style={{fontWeight: 'bold', float:'right',width:'48vw', height:'50vh'}} striped hover>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Date</th>\r\n                          <th>Health Score</th>\r\n                        </tr>\r\n                      </thead>\r\n                \r\n                      {/* { console.log( this.state.hgraph ) }\r\n                      { console.log( this.state.hGData.labels ) } */}\r\n                     {/* { Object.keys(githubData).map(key => ( <Issue key={key} details={githubData[key]} />)) } */}\r\n                      {/* { console.log( this.state.pGData.datasets.data ) } */}\r\n                      <tbody>\r\n                        <tr>\r\n                          <td style={{color:'red'}}>{this.state.hgraph.slice(-5,)[0].date}</td>\r\n                          <td style={{color:'green'}}>{this.state.hgraph.slice(-5,)[0].score}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style={{color:'red'}}>{this.state.hgraph.slice(-5,)[1].date}</td>\r\n                          <td style={{color:'green'}}>{this.state.hgraph.slice(-5,)[1].score}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style={{color:'red'}}>{this.state.hgraph.slice(-5,)[2].date}</td>\r\n                          <td style={{color:'green'}}>{this.state.hgraph.slice(-5,)[2].score}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style={{color:'red'}}>{this.state.hgraph.slice(-5,)[3].date}</td>\r\n                          <td style={{color:'green'}}>{this.state.hgraph.slice(-5,)[3].score}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style={{color:'red'}}>{this.state.hgraph.slice(-5,)[4].date}</td>\r\n                          <td style={{color:'green'}}>{this.state.hgraph.slice(-5,)[4].score}</td>\r\n                        </tr>\r\n                        \r\n                      </tbody>\r\n\r\n                    </Table> : <> </> }\r\n                  </div>\r\n                </> : <> </> }\r\n                { this.state.dlen > 0 ? \r\n                <>\r\n                  <br></br>\r\n                  <br></br>\r\n                  <h2 className='pt-3 pd-3'>Diabetes Data</h2>\r\n                  <br></br>\r\n                  <div style={{ maxHeight:'50vh',  display:'flex', height:'50vh'}}>\r\n                  { this.state.dlen >= 5 ? \r\n                    <Table style={{fontWeight: 'bold', float:'left',width:'48vw', height:'50vh'}} striped hover>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Date</th>\r\n                          <th>Diabetes Prediction</th>\r\n                        </tr>\r\n                      </thead>\r\n                \r\n                      <tbody>\r\n                        <tr>\r\n                          <td style={{color:'red'}}>{this.state.diabetes.slice(-5,)[0].date}</td>\r\n                          <td style={{color:'green'}}>{this.state.diabetes.slice(-5,)[0].prediction}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style={{color:'red'}}>{this.state.diabetes.slice(-5,)[1].date}</td>\r\n                          <td style={{color:'green'}}>{this.state.diabetes.slice(-5,)[1].prediction}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style={{color:'red'}}>{this.state.diabetes.slice(-5,)[2].date}</td>\r\n                          <td style={{color:'green'}}>{this.state.diabetes.slice(-5,)[2].prediction}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style={{color:'red'}}>{this.state.diabetes.slice(-5,)[3].date}</td>\r\n                          <td style={{color:'green'}}>{this.state.diabetes.slice(-5,)[3].prediction }</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style={{color:'red'}}>{this.state.diabetes.slice(-5,)[4].date}</td>\r\n                          <td style={{color:'green'}}>{this.state.diabetes.slice(-5,)[4].prediction }</td>\r\n                        </tr>\r\n                        \r\n                      </tbody>\r\n\r\n                    </Table>  : <> </> }\r\n                    <div style={{maxWidth:'48vw',display:'flex', width:'48vw'}}>\r\n                      <Line \r\n                          data={this.state.dGData} \r\n                          options={{ maintainAspectRatio: false }}\r\n                          width={50}\r\n                          height={50}\r\n                          style={{ float:'right'}} \r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  </> : <> </> }\r\n                  <br></br>\r\n                  { this.state.plen > 0 ? \r\n                  <>\r\n                  <br></br>\r\n                  <h2 className='pt-3 pd-3'>Pneumonia Data</h2>\r\n                  <br></br>\r\n                  <div style={{ maxHeight:'50vh',display:'flex' , height:'50vh'}}>\r\n                    <div style={{maxWidth:'48vw',display:'flex', width:'48vw'}}>\r\n                      <Line \r\n                          data={this.state.pGData} \r\n                          options={{ maintainAspectRatio: false }}\r\n                          width={50}\r\n                          height={50}\r\n                          style={{ float:'left'}} \r\n                      />\r\n                    </div>\r\n                    { this.state.plen >= 5 ? \r\n                    <Table style={{fontWeight: 'bold', float:'right',width:'48vw', height:'50vh'}} striped hover>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Date</th>\r\n                          <th>Pneumonia Prediction</th>\r\n                        </tr>\r\n                      </thead>\r\n              \r\n                      <tbody>\r\n                      <tr>\r\n                          <td style={{color:'red'}}>{this.state.pneumonia.slice(-5,)[0].date}</td>\r\n                          <td style={{color:'green'}}>{this.state.pneumonia.slice(-5,)[0].prediction}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style={{color:'red'}}>{this.state.pneumonia.slice(-5,)[1].date}</td>\r\n                          <td style={{color:'green'}}>{this.state.pneumonia.slice(-5,)[1].prediction}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style={{color:'red'}}>{this.state.pneumonia.slice(-5,)[2].date}</td>\r\n                          <td style={{color:'green'}}>{this.state.pneumonia.slice(-5,)[2].prediction}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style={{color:'red'}}>{this.state.pneumonia.slice(-5,)[3].date}</td>\r\n                          <td style={{color:'green'}}>{this.state.pneumonia.slice(-5,)[3].prediction}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td style={{color:'red'}}>{this.state.pneumonia.slice(-5,)[4].date}</td>\r\n                          <td style={{color:'green'}}>{this.state.pneumonia.slice(-5,)[4].prediction}</td>\r\n                        </tr>\r\n                        \r\n                      </tbody>\r\n\r\n                    </Table>  : <> </> }\r\n                  </div>\r\n                </> : <> </> }\r\n              </div>\r\n          );\r\n        }\r\n        else{\r\n          return <></>\r\n        }\r\n      }\r\n    }\r\n\r\n    export default PersonalHome;\r\n\r\n\r\n","C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Pneumonia\\Pneumonia.js",["63","64"],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Diabetes\\DiabetesForm.js",["65","66"],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\index.js",[],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\homepage\\Home.js",["67","68"],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\Diagnostic.js",["69","70"],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Register\\Login.js",[],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Register\\Signup.js",[],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\homepage\\Data.js",[],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\Dashboard.js",[],"C:\\Users\\adi\\Desktop\\carenet_Clone\\CareNet\\src\\components\\pages\\Navbar.js",["71","72"],{"ruleId":"73","severity":1,"message":"74","line":11,"column":10,"nodeType":"75","messageId":"76","endLine":11,"endColumn":16},{"ruleId":"73","severity":1,"message":"77","line":20,"column":11,"nodeType":"75","messageId":"76","endLine":20,"endColumn":19},{"ruleId":"78","severity":1,"message":"79","line":516,"column":27,"nodeType":"80","endLine":516,"endColumn":195},{"ruleId":"73","severity":1,"message":"81","line":6,"column":7,"nodeType":"75","messageId":"76","endLine":6,"endColumn":11},{"ruleId":"73","severity":1,"message":"74","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":16},{"ruleId":"78","severity":1,"message":"79","line":101,"column":27,"nodeType":"80","endLine":101,"endColumn":167},{"ruleId":"73","severity":1,"message":"74","line":7,"column":10,"nodeType":"75","messageId":"76","endLine":7,"endColumn":16},{"ruleId":"78","severity":1,"message":"79","line":273,"column":27,"nodeType":"80","endLine":273,"endColumn":115},{"ruleId":"73","severity":1,"message":"82","line":4,"column":9,"nodeType":"75","messageId":"76","endLine":4,"endColumn":20},{"ruleId":"83","severity":1,"message":"84","line":22,"column":7,"nodeType":"85","endLine":22,"endColumn":9,"suggestions":"86"},{"ruleId":"73","severity":1,"message":"87","line":3,"column":45,"nodeType":"75","messageId":"76","endLine":3,"endColumn":48},{"ruleId":"73","severity":1,"message":"88","line":3,"column":50,"nodeType":"75","messageId":"76","endLine":3,"endColumn":53},{"ruleId":"73","severity":1,"message":"89","line":11,"column":12,"nodeType":"75","messageId":"76","endLine":11,"endColumn":18},{"ruleId":"83","severity":1,"message":"84","line":38,"column":7,"nodeType":"85","endLine":38,"endColumn":9,"suggestions":"90"},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'yearData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'data' is assigned a value but never used.","'homeObjFour' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["91"],"'Row' is defined but never used.","'Col' is defined but never used.","'button' is assigned a value but never used.",["92"],{"desc":"93","fix":"94"},{"desc":"93","fix":"95"},"Update the dependencies array to be: [user]",{"range":"96","text":"97"},{"range":"98","text":"97"},[613,615],"[user]",[1112,1114]]